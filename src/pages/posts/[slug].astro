---
import Layout from "../../layouts/Layout.astro";

import { getBlogSummaries } from "../../scripts/blog";

import { getEntry, render } from 'astro:content';

import { Icon } from "astro-icon/components";

export async function getStaticPaths() {
    const summaries = await getBlogSummaries();

    return summaries.map((b) => ({
        params: {slug: b.slug}
    }));
}

// 核心是这个要和上面的 getStaticPaths 的 params 对应
const { slug } = Astro.params;

const post = await getEntry('blog', slug);

const { Content } = await render(post!);

const summaries = await getBlogSummaries();

const summary = summaries.find((b) => b.slug === slug);

// 测试用
import { unified } from "unified";
import remarkParse from "remark-parse";
import remarkMdx from 'remark-mdx'
import remarkRehype from "remark-rehype";
import rehypePrettyCode from "rehype-pretty-code";
import rehypeStringify from "rehype-stringify";

const file = await unified()
        .use(remarkParse)
        .use(remarkMdx)
        .use(remarkRehype)
        .use(rehypePrettyCode, {
            // options
        })
        .use(rehypeStringify)
        .process(post?.body)
---

<Layout>
    <!-- max-w-full 用以覆盖 prose 中的默认值 -->
    <div class="rounded-2xl bg-[var(--card-bg)] px-9 py-6">
        <!-- 字数和阅读时间 -->
        <div class="flex items-center">
            <div class="flex items-center justify-center w-6 h-6 rounded bg-slate-300">
                <Icon name="material-symbols:notes-rounded" class="w-4 h-4"/>
            </div>
            <p class="ml-2 text-sm">{ summary?.wordCount }</p>
            <p class="ml-1.5 text-sm">words</p>
            <div class="flex items-center justify-center w-6 h-6 rounded bg-slate-300 ml-4">
                <Icon name="material-symbols:schedule-outline-rounded" class="w-4 h-4"/>
            </div>
            <p class="ml-2 text-sm">{ summary?.minutesRead }</p>
            <p class="ml-1.5 text-sm">minutes</p>
        </div>
        <!-- 标题 -->
        <div class="flex items-center mt-5
        before:w-1 before:h-6 before:bg-[var(--primary)] before:rounded-md">
            <p class="pl-3 text-3xl font-bold">
                { summary?.title }
            </p>
        </div>
        <!-- published/updated/category/tags -->
        <div class="flex items-center mt-5">
            {/* published */}
            <div class="flex items-center justify-center w-8 h-8 rounded-lg 
            bg-[var(--btn-regular-bg)] mr-2">
                <Icon name="material-symbols:calendar-today-outline-rounded" 
                class={`w-5 h-5 text-[var(--primary)]`}/>
            </div>
            <p class="text-sm mr-4">
                { summary?.published.toISOString().slice(0, 10) }
            </p>
            {/* updated */}
            <div class="flex items-center justify-center w-8 h-8 rounded-lg 
            bg-[var(--btn-regular-bg)] mr-2">
                <Icon name="material-symbols:edit-calendar-outline-rounded" 
                class={`w-5 h-5 text-[var(--primary)]`}/>
            </div>
            <p class="text-sm mr-4">
                { summary?.published.toISOString().slice(0, 10) }
            </p>
            {/* category */}
            <div class="flex items-center justify-center w-8 h-8 rounded-lg 
            bg-[var(--btn-regular-bg)] mr-2">
                <Icon name="material-symbols:book-2-outline-rounded" 
                class={`w-5 h-5 text-[var(--primary)]`}/>
            </div>
            <div class="flex items-center justify-center group w-fit px-1 h-8 mr-4
            hover:bg-[var(--btn-regular-bg)]">
                <a href={`category/${summary?.category}`} class="text-sm">
                    { summary?.category }
                </a>
            </div>
            {/* tag */}
            <div class="flex items-center justify-center w-8 h-8 rounded-lg 
            bg-[var(--btn-regular-bg)] mr-2">
                <Icon name="material-symbols:tag-rounded" 
                class={`w-5 h-5 text-[var(--primary)]`}/>
            </div>
            {
                summary?.tags.map((tag, index) => (
                    <div class="flex">
                        <a href={`tag/${tag}`} class="text-sm mr-2">
                            { tag }
                        </a>
                        {index < (summary?.tags.length - 1) && <p class="text-sm mr-2">/</p>}
                    </div>
                ))
            }
        </div>
        <!-- 下划线 -->
        <div class="mt-5 border-t-[1px] border-dashed 
        border-black/10 dark:border-white/[0.15]"></div>
        <!-- 正文 -->
        <!-- prose max-w-full -->
        <div class="post-content mt-10">
            <!-- <Content /> -->
            { file }
        </div>
    </div>
</Layout>
