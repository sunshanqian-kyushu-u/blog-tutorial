---
import { getCollection } from 'astro:content';

const blogs = await getCollection('blog');

blogs.sort((a, b) => b.data.published.getTime() - a.data.published.getTime());

const tagMap = new Map<string, { count: number; blogArray: typeof blogs }>();

for (const blog of blogs) {
    const tags = blog.data.tags;

    for (const tag of tags) {
        if (!tagMap.has(tag)) {
            tagMap.set(tag, { count: 1, blogArray: [blog] });
        } else {
            const entry = tagMap.get(tag)!;
            entry.count += 1;
            entry.blogArray.push(blog);
        }
    }
}

const groupedTags = Array.from(tagMap.entries()).map(([tag, { count, blogArray }]) => ({
    tag, 
    count, 
    blogArray, 
}))
---

<div class="rounded-2xl bg-[var(--card-bg)] p-4">
    <!-- 第一行容器 -->
    <div class="flex gap-3 pt-0.5 pb-2
    before:w-1 before:h-4 before:bg-[var(--primary)] before:rounded-md before:mt-1">
        <p class="font-bold text-base">Tags</p>
    </div>
    <!-- 实际内容 -->
    <div class="flex flex-wrap gap-3">
        {
            groupedTags.map(({ tag }) => (
                <a href={`/tag/${tag}`}>
                    <p>{tag}</p>
                </a>
            ))
        }
    </div>
</div>
